[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing tests/aorai/single_call.i (no preprocessing)
[aorai] Welcome to the Aorai plugin
[kernel] Parsing FRAMAC_SHARE/libc/__fc_builtin_for_normalization.i (no preprocessing)
[kernel] Parsing /tmp/aorai_single_call0.i (no preprocessing)
/* Generated by Frama-C */
enum aorai_ListOper {
    op_main = 0
};
enum aorai_OpStatusList {
    aorai_Terminated = 1,
    aorai_Called = 0
};
/*@ ghost enum aorai_ListOper aorai_CurOperation = op_main; */
/*@ ghost enum aorai_OpStatusList aorai_CurOpStatus = aorai_Called; */
/*@ ghost int S0 = 1; */
/*@ ghost int Sf = 0; */
/*@ ghost int aorai_intermediate_state = 0; */
/*@ ensures aorai_CurOpStatus ≡ aorai_Called;
    ensures aorai_CurOperation ≡ op_main;
    assigns aorai_CurOpStatus, aorai_CurOperation, S0, Sf,
            aorai_intermediate_state;
    
    behavior buch_state_S0_out:
      ensures 0 ≡ S0;
    
    behavior buch_state_Sf_out:
      ensures 0 ≡ Sf;
    
    behavior buch_state_aorai_intermediate_state_in:
      assumes 1 ≡ S0;
      ensures 1 ≡ aorai_intermediate_state;
    
    behavior buch_state_aorai_intermediate_state_out:
      assumes 0 ≡ S0;
      ensures 0 ≡ aorai_intermediate_state;
 */
extern void main_pre_func(void);

/*@ requires 1 ≡ aorai_intermediate_state ∧ 0 ≡ S0 ∧ 0 ≡ Sf;
    ensures aorai_CurOpStatus ≡ aorai_Terminated;
    ensures aorai_CurOperation ≡ op_main;
    assigns aorai_CurOpStatus, aorai_CurOperation, S0, Sf,
            aorai_intermediate_state;
    
    behavior buch_state_S0_out:
      ensures 0 ≡ S0;
    
    behavior buch_state_Sf_in:
      assumes 1 ≡ aorai_intermediate_state;
      ensures 1 ≡ Sf;
    
    behavior buch_state_Sf_out:
      assumes 0 ≡ aorai_intermediate_state;
      ensures 0 ≡ Sf;
    
    behavior buch_state_aorai_intermediate_state_out:
      ensures 0 ≡ aorai_intermediate_state;
 */
extern void main_post_func(int res);

/*@ requires 1 ≡ S0 ∧ 0 ≡ Sf ∧ 0 ≡ aorai_intermediate_state;
    
    behavior aorai_acceptance:
      ensures 1 ≡ Sf;
    
    behavior Buchi_property_behavior:
      ensures 0 ≡ S0 ∧ 0 ≡ aorai_intermediate_state;
      ensures 1 ≡ Sf;
 */
int main(void)
{
  int __retres;
  main_pre_func();
  __retres = 0;
  main_post_func(__retres);
  return __retres;
}


